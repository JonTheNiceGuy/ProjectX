---
######################################################################
#
# Mark Higginbottom
#
# 05/12/2016
#
# Playbook to configure a centos7 vm with AWX
#
######################################################################
######################################################################
# This block creates or looks up the default credential to use for the 
# admin account in AWX
######################################################################
- name: Set credentials
  hosts: "{{ servers }}"
  tasks:
  - name: Define Credentials
    delegate_to: localhost
    run_once: true
    set_fact:
      admin_password: "{% if lookup('env', 'AWX_PASSWORD') != '' %}{{ lookup('env', 'AWX_PASSWORD') }}{% else %}{{ awx_password|default(ansible_date_time.epoch|hash('md5')|truncate(12, true, '') + '_AWX') }}{% endif %}"
      admin_password_Source: "{% if lookup('env', 'AWX_PASSWORD') != '' %}env{% elif awx_password is defined %}config{% else %}random{% endif %}"

  - name: Ensure config paths exist
    delegate_to: localhost
    run_once: true
    file:
      path: "{{ item }}"
      state: directory
    with_items:
    - group_vars
    - group_vars/all

  - name: Write config file with passwords
    delegate_to: localhost
    run_once: true
    copy:
      dest: group_vars/all/awx_password.yml
      content: "awx_password: {{ admin_password }}"
    when: admin_password_Source == 'random' or admin_password_Source == 'env'

######################################################################
# This block applies all the roles to the AWX control machine
######################################################################
- name: AWX control machine
  hosts: "{{ servers }}"
  become: true

  vars:
    nodejs_version: "6.x"
    pip_install_packages:
      - name: docker-py

  tasks:
  - include_role:
      name: "geerlingguy.repo-epel"
  - include_role:
      name: "geerlingguy.git"
  - include_role:
      name: "geerlingguy.ansible"
  - include_role:
      name: "geerlingguy.docker"
  - include_role:
      name: "geerlingguy.pip"
  - include_role:
      name: "geerlingguy.nodejs"
  - include_role:
      name: "JonTheNiceGuy.simple-nginx-tls-reverse-proxy"
  - include_role:
      name: "ansible-role-awx"

  # Based on https://askubuntu.com/a/982187
  - name: Add this user to the ACLs to permit access to the Docker file
    acl:
      path: /var/run/docker.sock
      etype: user
      entity: "{{ ansible_env.SUDO_USER }}"
      permissions: rw
      state: present

  - name: Add containers to the inventory
    add_host:
      name: "{{ item.name }}"
      groups: docker
      ansible_connection: docker
      ansible_docker_extra_args: "{% if item.host is defined %}-H=tcp://{{ item.host }}:{{ item.port | default('2376') }}{% else %}{{ omit }}{% endif %}"
    changed_when: false
    with_items:
    - name: awx_task
    - name: awx_web

######################################################################
# This block applies all the docker hosts created by the AWX build
######################################################################
- hosts: docker
  become: true
  tasks:
  - name: Install any additional packages into the docker containers and the host system
    package:
      name: "{{ item }}"
      state: present
    with_items: "{{ extra_yum_packages | default(['gcc', 'python-devel']) }}"

  - name: Install any additional pip packages into the docker containers and the host system
    pip:
      name: "{{ item.name }}"
      virtualenv: "{{ item.virtualenv | default(default_virtualenv | default(omit)) }}"
      version: "{{ item.version | default(omit) }}"
      state: present
    with_items: "{{ extra_pip_packages | default({}) }}"

######################################################################
# This block advises the password that has been set or recovered for
# the AWX admin user.
######################################################################
- name: Advise the password
  hosts: "{{ servers }}"
  tasks:
  - name: Advise the password
    delegate_to: localhost
    run_once: true
    debug:
      msg:
      - "AWX Password | Set to      | {{ admin_password }}"

